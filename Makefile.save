

#BACKENDS=backends/anthropic.cpp backends/api_backend.cpp backends/backend.cpp backends/factory.cpp backends/gemini.cpp backends/grok.cpp backends/llamacpp.cpp backends/ollama.cpp backends/openai.cpp backends/tensorrt.cpp
BACKENDS=backends/backend.cpp backends/factory.cpp backends/api.cpp backends/openai.cpp
TOOL_SRCS=tools/command_tools.cpp tools/core_tools.cpp tools/filesystem_tools.cpp tools/http_tools.cpp tools/json_tools.cpp tools/mcp_resource_tools.cpp tools/memory_tools.cpp tools/tool.cpp tools/tool_parser.cpp tools/utf8_sanitizer.cpp tools/web_search.cpp
MCP_SRCS=mcp/mcp_client.cpp mcp/mcp_config.cpp mcp/mcp_manager.cpp mcp/mcp_server.cpp mcp/mcp_tool.cpp
SERVER_SRCS=server/server.cpp
SRCS=main.cpp config.cpp logger.cpp http_client.cpp $(BACKENDS) $(TOOL_SRCS) $(MCP_SRCS) $(SERVER_SRCS)
OBJS=$(SRCS:%.cpp=%$(OBJSUFFIX).o)
LIBS=-lcurl
CC=g++ -O3 -pipe -march=native -mtune=native -flto -DNDEBUG -ffast-math -funroll-loops

shepherd: $(OBJS)
	g++ -o $@ $(OBJS) $(LIBS)

$(OBJS): $(SRCS)

.SUFFIXES: .cpp .o

##%.o : %.cpp
%.o : %.cpp
	$(CC) -I . -c $< -o $@

clean:
	rm -f shepherd $(OBJS)
